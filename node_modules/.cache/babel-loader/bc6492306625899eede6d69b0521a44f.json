{"ast":null,"code":"var _jsxFileName = \"/home/amit/Documents/amit project/video product/video-product/src/components/Product.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URI } from \"../config/constants\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport Dash from \"../Component/Dash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Product = _ref => {\n  _s();\n\n  let {\n    getAllMedias\n  } = _ref;\n  const [productname, setProductname] = useState(\"\");\n  const [productprice, setProductPrice] = useState(\"\");\n  const [videos, setVideos] = useState(null);\n  const [progress, setProgress] = useState();\n\n  const hadleSubmit = e => {\n    e.preventDefault();\n    let formdata = new FormData();\n\n    if (!videos) {\n      return;\n    }\n\n    formdata.append(\"videos\", videos);\n    formdata.append(\"productname\", productname);\n    formdata.append(\"productprice\", productprice);\n    axios.request({\n      method: \"post\",\n      url: `${BACKEND_URI}/api/v1/media/create`,\n      data: formdata,\n      onUploadProgress: data => {\n        setProgress(Math.round(100 * data.loaded / data.total));\n      }\n    }).then(success => {\n      getAllMedias(); // alert(\"Submitted successfully\");\n    }).catch(error => {\n      console.log(error);\n      alert(\"Error happened!\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login upload mt-5 hi\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center masala-3\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: hadleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-cloud-upload-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Product Name\",\n            name: \"productname\",\n            id: \"name\",\n            className: \"form-control\",\n            onChange: e => setProductname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Product Price\",\n            name: \"productprice\",\n            id: \"productprice\",\n            className: \"form-control\",\n            onChange: e => setProductPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"videos\",\n            id: \"videos\",\n            multiple: true,\n            className: \"form-control\" // accept=\".mp4, .mkv\"\n            ,\n            onChange: e => {\n              setVideos(e.target.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-2\",\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: progress,\n          label: `${progress}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Product, \"ckGu6bqjfJhQLUmUdUtS3Iu0sAA=\");\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/amit/Documents/amit project/video product/video-product/src/components/Product.js"],"names":["React","useState","axios","BACKEND_URI","ProgressBar","Dash","Product","getAllMedias","productname","setProductname","productprice","setProductPrice","videos","setVideos","progress","setProgress","hadleSubmit","e","preventDefault","formdata","FormData","append","request","method","url","data","onUploadProgress","Math","round","loaded","total","then","success","catch","error","console","log","alert","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URI } from \"../config/constants\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport Dash from \"../Component/Dash\";\n\n\n\nconst Product = ({ getAllMedias }) => {\n  const [productname, setProductname] = useState(\"\");\n  const [productprice, setProductPrice] = useState(\"\");\n  const [videos, setVideos] = useState(null);\n  const [progress,setProgress] = useState()\n\n\n  const hadleSubmit = (e) => {\n    e.preventDefault();\n    let formdata = new FormData();\n    if(!videos){\n      return;\n    }\n    formdata.append(\"videos\", videos);\n    formdata.append(\"productname\", productname);\n    formdata.append(\"productprice\", productprice);\n\n    axios.request({\n      method: \"post\",\n      url: `${BACKEND_URI}/api/v1/media/create`,\n      data: formdata,\n      onUploadProgress: (data) => {\n        setProgress(Math.round((100 * data.loaded) / data.total));\n      }\n    }).then((success) => {\n          getAllMedias();\n          // alert(\"Submitted successfully\");\n        }).catch((error) => {\n            console.log(error);\n            alert(\"Error happened!\");\n        });\n\n    \n  };\n\n  return (\n    <>\n<Dash />\n      <div className=\"login upload mt-5 hi\">\n        <h3 className=\"text-center masala-3\">Add Product</h3>\n        <form onSubmit={hadleSubmit}>\n        <div class=\"icon\"><i class=\"fas fa-cloud-upload-alt\"></i></div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Product Name\"\n              name=\"productname\"\n              id=\"name\"\n              className=\"form-control\"\n              onChange={(e) => setProductname(e.target.value)}\n            /> <br />\n            \n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Product Price\"\n              name=\"productprice\"\n              id=\"productprice\"\n              className=\"form-control\"\n              onChange={(e) => setProductPrice(e.target.value)}\n            /> <br />\n          </div>\n\n          <div className=\"form-group\">\n            {/* <label htmlFor=\"videos\">Upload Videos</label> */}\n            <input\n              type=\"file\"\n              name=\"videos\"\n              id=\"videos\"\n              multiple\n              className=\"form-control\"\n              // accept=\".mp4, .mkv\"\n              onChange={(e) => {\n                setVideos(e.target.files[0]);\n\n              }}\n            />\n          </div>\n          <br />\n          <button type=\"submit\" className=\"btn btn-primary mt-2\">\n          Add Product\n          </button> \n          <br /> <br />\n          {progress && <ProgressBar now={progress} label={`${progress}%`} />}\n         \n        </form>\n      </div>\n      \n\n    </>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}