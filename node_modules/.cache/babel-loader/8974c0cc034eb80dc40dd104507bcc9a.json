{"ast":null,"code":"const assert = require('assert');\n\nconst formatNumber = require('format-num');\n\nconst defaultOptions = {\n  format: '%v',\n  // %s => symbol, %v => value, %c => code\n  code: undefined,\n  symbol: undefined,\n  locale: 'en-US',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  nanZero: true\n};\n\nfunction formatCurrency(amount, opts) {\n  opts = Object.assign({}, defaultOptions, opts);\n  assert(opts.format.includes('%v'), 'Must have \"%v\" in `format` options.');\n  amount = formatNumber(amount, opts);\n  return opts.format.replace('%v', amount).replace('%s', opts.symbol).replace('%c', opts.code);\n}\n\nmodule.exports = formatCurrency;","map":{"version":3,"sources":["/home/amit/Documents/amit project/video product/video-product/node_modules/format-currency/index.js"],"names":["assert","require","formatNumber","defaultOptions","format","code","undefined","symbol","locale","minimumFractionDigits","maximumFractionDigits","nanZero","formatCurrency","amount","opts","Object","assign","includes","replace","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,YAAD,CAA5B;;AAEA,MAAME,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,IADa;AACP;AACdC,EAAAA,IAAI,EAAEC,SAFe;AAGrBC,EAAAA,MAAM,EAAED,SAHa;AAIrBE,EAAAA,MAAM,EAAE,OAJa;AAKrBC,EAAAA,qBAAqB,EAAE,CALF;AAMrBC,EAAAA,qBAAqB,EAAE,CANF;AAOrBC,EAAAA,OAAO,EAAE;AAPY,CAAvB;;AAUA,SAASC,cAAT,CAAyBC,MAAzB,EAAiCC,IAAjC,EAAuC;AACrCA,EAAAA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,cAAlB,EAAkCW,IAAlC,CAAP;AACAd,EAAAA,MAAM,CAACc,IAAI,CAACV,MAAL,CAAYa,QAAZ,CAAqB,IAArB,CAAD,EAA6B,qCAA7B,CAAN;AAEAJ,EAAAA,MAAM,GAAGX,YAAY,CAACW,MAAD,EAASC,IAAT,CAArB;AAEA,SAAOA,IAAI,CAACV,MAAL,CAAYc,OAAZ,CAAoB,IAApB,EAA0BL,MAA1B,EAAkCK,OAAlC,CAA0C,IAA1C,EAAgDJ,IAAI,CAACP,MAArD,EAA6DW,OAA7D,CAAqE,IAArE,EAA2EJ,IAAI,CAACT,IAAhF,CAAP;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiBR,cAAjB","sourcesContent":["const assert = require('assert')\nconst formatNumber = require('format-num')\n\nconst defaultOptions = {\n  format: '%v', // %s => symbol, %v => value, %c => code\n  code: undefined,\n  symbol: undefined,\n  locale: 'en-US',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  nanZero: true\n}\n\nfunction formatCurrency (amount, opts) {\n  opts = Object.assign({}, defaultOptions, opts)\n  assert(opts.format.includes('%v'), 'Must have \"%v\" in `format` options.')\n\n  amount = formatNumber(amount, opts)\n\n  return opts.format.replace('%v', amount).replace('%s', opts.symbol).replace('%c', opts.code)\n}\n\nmodule.exports = formatCurrency\n"]},"metadata":{},"sourceType":"script"}